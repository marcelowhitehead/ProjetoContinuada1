/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.bandtec.projetoindividual;

import java.util.Random;

/**
 *
 * @author marce
 */
public class projetoOp1 extends javax.swing.JFrame {
    Integer contagem = 0;
    
    //CPU
    Double mediaCpu = 0.0;
    Integer auxiliarCpu = 0;
    Integer maiorCpu = 0;
    Integer menorCpu = 100;
    
//    DISCO
    
    Double mediaDisco = 0.0;
    Integer auxiliarDisco = 0;
    Integer maiorDisco = 0;
    Integer menorDisco = 100;
    
// MEMÓRIA
     Double mediaMemoria = 0.0;
    Integer auxiliarMemoria = 0;
    Integer maiorMemoria = 0;
    Integer menorMemoria = 100;

    
    /**
     * Creates new form ProjetoSolo
     */
    public projetoOp1() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        lblCpuValor2 = new javax.swing.JLabel();
        lblCpu = new javax.swing.JLabel();
        lblDisco = new javax.swing.JLabel();
        lblMemoria = new javax.swing.JLabel();
        pbCpu = new javax.swing.JProgressBar();
        pbDisco = new javax.swing.JProgressBar();
        pbMemoria = new javax.swing.JProgressBar();
        btnLeitura = new javax.swing.JButton();
        lblCpuValor = new javax.swing.JLabel();
        lblDiscoValor = new javax.swing.JLabel();
        lblMemoriaValor = new javax.swing.JLabel();
        lblMediaCpu = new javax.swing.JLabel();
        lblMaxCpu = new javax.swing.JLabel();
        lblMinCpu = new javax.swing.JLabel();
        lblMediaDisco = new javax.swing.JLabel();
        lblMaxDisco = new javax.swing.JLabel();
        lblMinDisco = new javax.swing.JLabel();
        lblMediaMemoria = new javax.swing.JLabel();
        lblMaxMemoria = new javax.swing.JLabel();
        lblMinMemoria = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        jLabel1.setText("jLabel1");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane4.setViewportView(jTextArea3);

        lblCpuValor2.setText("00");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblCpu.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblCpu.setText("CPU");

        lblDisco.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblDisco.setText("DISCO");

        lblMemoria.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblMemoria.setText("MEMÓRIA");

        pbCpu.setForeground(new java.awt.Color(0, 0, 0));

        pbDisco.setForeground(new java.awt.Color(0, 0, 0));

        pbMemoria.setForeground(new java.awt.Color(0, 0, 0));

        btnLeitura.setBackground(new java.awt.Color(0, 255, 102));
        btnLeitura.setForeground(new java.awt.Color(0, 0, 0));
        btnLeitura.setText("Fazer leitura dos dados");
        btnLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeituraActionPerformed(evt);
            }
        });

        lblCpuValor.setText("00");

        lblDiscoValor.setText("00");

        lblMemoriaValor.setText("00");

        lblMediaCpu.setText("00");

        lblMaxCpu.setText("00");

        lblMinCpu.setText("00");

        lblMediaDisco.setText("00");

        lblMaxDisco.setText("00");

        lblMinDisco.setText("00");

        lblMediaMemoria.setText("00");

        lblMaxMemoria.setText("00");

        lblMinMemoria.setText("00");

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(btnLeitura)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pbMemoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pbCpu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCpu, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblCpuValor, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addComponent(lblMediaCpu, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblMaxCpu, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblDiscoValor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblMediaDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblMaxDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblMemoriaValor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblMediaMemoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(lblMaxMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblMinCpu, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                            .addComponent(lblMinDisco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMinMemoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(pbDisco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(46, 46, 46))
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCpu)
                    .addComponent(lblCpuValor)
                    .addComponent(lblMediaCpu)
                    .addComponent(lblMaxCpu)
                    .addComponent(lblMinCpu))
                .addGap(8, 8, 8)
                .addComponent(pbCpu, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDisco)
                    .addComponent(lblDiscoValor)
                    .addComponent(lblMediaDisco)
                    .addComponent(lblMaxDisco)
                    .addComponent(lblMinDisco))
                .addGap(12, 12, 12)
                .addComponent(pbDisco, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMemoria)
                    .addComponent(lblMemoriaValor)
                    .addComponent(lblMediaMemoria)
                    .addComponent(lblMaxMemoria)
                    .addComponent(lblMinMemoria))
                .addGap(18, 18, 18)
                .addComponent(pbMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLeitura)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeituraActionPerformed
       
        contagem++; // CONTAGEM DE CLICKS NO BOTÃO
//------------------------------------------------------------------------------
//        CPU
        Random cpuAleatorio = new Random();
        Integer valorCpu = cpuAleatorio.nextInt(100)+1;
        pbCpu.setValue(valorCpu);
        lblCpuValor.setText(String.format("%d%%", valorCpu));
        pbCpu.setStringPainted(true);
        pbCpu.setString(valorCpu.toString());
       
        //MEDIA CPU
        mediaCpu = mediaCpu + Double.valueOf(valorCpu);
        Double totalMedia = mediaCpu / contagem;
        lblMediaCpu.setText(String.format("Média: %.1f", totalMedia));
        
       auxiliarCpu = valorCpu;
        if(auxiliarCpu > maiorCpu){
            maiorCpu = valorCpu;
            lblMaxCpu.setText(String.format("Maior: %d%%", maiorCpu));
        }
       if(menorCpu > auxiliarCpu){
            menorCpu = valorCpu;
            lblMinCpu.setText(String.format("Menor: %d%%", menorCpu));
        }       
//------------------------------------------------------------------------------
//                  DISCO
        Random discoAleatorio = new Random();
        Integer valorDisco = discoAleatorio.nextInt(100)+1;
        pbDisco.setValue(valorDisco);
        lblDiscoValor.setText(String.format("%d%%", valorDisco));
        pbDisco.setStringPainted(true);
        pbDisco.setString(valorDisco.toString());
        
        mediaDisco = mediaDisco + Double.valueOf(valorDisco);
        Double totalMediaDisco = mediaDisco / contagem;
        lblMediaDisco.setText(String.format("Média: %.1f", totalMediaDisco));
        
       auxiliarDisco = valorDisco;
        if(auxiliarDisco > maiorDisco){
            maiorDisco = valorDisco;
            lblMaxDisco.setText(String.format("Maior: %d%%", maiorDisco));
        }
       if(menorDisco > auxiliarDisco){
            menorDisco = valorDisco;
            lblMinDisco.setText(String.format("Menor: %d%%", menorDisco));
        }
//------------------------------------------------------------------------------
//               MEMÓRIA
        Random memoriaAleatorio = new Random();
        Integer valorMemoria = memoriaAleatorio.nextInt(100)+1;
        pbMemoria.setValue(valorMemoria);
        lblMemoriaValor.setText(String.format("%d%%", valorMemoria));
        pbMemoria.setStringPainted(true);
        pbMemoria.setString(valorMemoria.toString());
        
        mediaMemoria = mediaMemoria + Double.valueOf(valorMemoria);
        Double totalMediaMemoria = mediaMemoria / contagem;
        lblMediaMemoria.setText(String.format("Média: %.1f", totalMediaMemoria));
        
       auxiliarMemoria = valorMemoria;
        if(auxiliarMemoria > maiorMemoria){
           maiorMemoria = valorMemoria;
            lblMaxMemoria.setText(String.format("Maior: %d%%",maiorMemoria));
        }
       if(menorMemoria > auxiliarMemoria){
            menorMemoria = valorMemoria;
            lblMinMemoria.setText(String.format("Menor: %d%%", menorMemoria));
        }
        
        
    }//GEN-LAST:event_btnLeituraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(projetoOp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(projetoOp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(projetoOp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(projetoOp1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new projetoOp1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLeitura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JLabel lblCpu;
    private javax.swing.JLabel lblCpuValor;
    private javax.swing.JLabel lblCpuValor2;
    private javax.swing.JLabel lblDisco;
    private javax.swing.JLabel lblDiscoValor;
    private javax.swing.JLabel lblMaxCpu;
    private javax.swing.JLabel lblMaxDisco;
    private javax.swing.JLabel lblMaxMemoria;
    private javax.swing.JLabel lblMediaCpu;
    private javax.swing.JLabel lblMediaDisco;
    private javax.swing.JLabel lblMediaMemoria;
    private javax.swing.JLabel lblMemoria;
    private javax.swing.JLabel lblMemoriaValor;
    private javax.swing.JLabel lblMinCpu;
    private javax.swing.JLabel lblMinDisco;
    private javax.swing.JLabel lblMinMemoria;
    private javax.swing.JProgressBar pbCpu;
    private javax.swing.JProgressBar pbDisco;
    private javax.swing.JProgressBar pbMemoria;
    // End of variables declaration//GEN-END:variables
}
